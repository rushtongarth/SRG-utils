#!/bin/bash


function otherhost
{
  if [ -n "$1" ]
  then
    printf "Please provide a user id\n"
    printf "USAGE: ${FUNCNAME} <ID for ssh>\n"
  else
    CURR_ID="$1"
    ssh "${CURR_ID}@access.ces.clemson.edu"
  fi
}

function myip
{
  local myipaddr
  myipaddr=$(curl -s http://ipecho.net/plain)
  printf "%s\n" $myipaddr
}

function packlist
{
  if [[ -z $1 ]]
  then
    printf "please provide a package\n"
    printf "USAGE: %s <pattern>\n" ${FUNCNAME}
  else
    dpkg -l | grep $1 | sed -e 's/[ ]\{3,\}/;;/g' | column -s';;' -t
  fi
}

function openwhich
{
  usage=$(cat <<USESTR
$FUNCNAME PROGRAM FILE

Opens FILE with PROGRAM, equivalent to the one liner:
PROGRAM \`which FILE\`

USESTR
)
  if [[ $# -ne 2 ]]
  then
    printf 'ERROR -- Two Arguments are required\n'
    printf "$usage\n"
  else
    $1 $(which $2)
  fi
}
function conntest
{
  local var
  if [[ $# -eq 1 ]]
  then
    ping -w 2 -c 3 $1
    var=$?
  else
    ping -w 2 -c 3 www.duckduckgo.com
    var=$?
  fi
  if [[ $var -eq 0 ]]
  then
    printf 'Host found\n'
  else
    printf 'Unable to find host\n'
  fi
}

# pip bash completion
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip

